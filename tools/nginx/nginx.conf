user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

env BASENAME;
env SERVICE_BASE_URL;
env SERVICE_DOMAIN;
env EXTERNAL_ASSETS;
env PROFILES_LINK;
env HEAP_KEY;

load_module "modules/ngx_http_perl_module.so";

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  perl_set $baseName 'sub { return $ENV{"BASENAME"}; }';
  perl_set $serviceBaseUrl 'sub { return $ENV{"SERVICE_BASE_URL"}; }';
  perl_set $serviceDomain 'sub { return $ENV{"SERVICE_DOMAIN"}; }';
  perl_set $externalAssets 'sub { return $ENV{"EXTERNAL_ASSETS"}; }';
  perl_set $profilesLink 'sub { return $ENV{"PROFILES_LINK"}; }';
  perl_set $heapKey 'sub { return $ENV{"HEAP_KEY"}; }';

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'FMNO=$http_fmno STATUS=$status $baseName - $serviceBaseUrl - $serviceDomain ';

  access_log  /var/log/nginx/access.log  main;

  # don't send the nginx version number in error pages and Server header
  server_tokens  off;

  # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
  # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
  # this particular website if it was disabled by the user.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  add_header X-XSS-Protection "1; mode=block";

  # config to don't allow the browser to render the page inside an frame or iframe
  # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
  # if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
  # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
  add_header X-Frame-Options SAMEORIGIN;
  
  # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
  # to disable content-type sniffing on some browsers.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
  # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
  # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
  add_header X-Content-Type-Options nosniff;

  sendfile     on;
  tcp_nopush   on;
  tcp_nodelay  on;

  keepalive_timeout  65;
  keepalive_requests 100000;

  client_body_buffer_size      128k;
  client_max_body_size         10m;
  client_header_buffer_size    1k;
  large_client_header_buffers  4 16k;
  output_buffers               1 32k;
  postpone_output              1460;

  client_header_timeout  3m;
  client_body_timeout    3m;
  send_timeout           3m;

  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 5;
  open_file_cache_errors off;

  include configs/gzip.conf;
  include /etc/nginx/conf.d/default.conf;
}